///
/// Code generated by jsonToDartModel https://ashamp.github.io/jsonToDartModel/
///
class GradientLinesPoints {

  double? x;
  double? y;
  String? id;

  GradientLinesPoints({
    this.x,
    this.y,
    this.id,
  });
  GradientLinesPoints.fromJson(Map<String, dynamic> json) {
    x = json['x']?.toDouble();
    y = json['y']?.toDouble();
    id = json['_id']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['x'] = x;
    data['y'] = y;
    data['_id'] = id;
    return data;
  }
}

class GradientLines {

  dynamic gradient;
  List<GradientLinesPoints>? points;
  String? id;

  GradientLines({
    this.gradient,
    this.points,
    this.id,
  });
  GradientLines.fromJson(Map<String, dynamic> json) {
    gradient = json['gradient'];
    if (json['points'] != null) {
      final v = json['points'];
      final arr0 = <GradientLinesPoints>[];
      v.forEach((v) {
        arr0.add(GradientLinesPoints.fromJson(v));
      });
      points = arr0;
    }
    id = json['_id']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['gradient'] = gradient;
    if (points != null) {
      final v = points;
      final arr0 = [];
      v?.forEach((v) {
        arr0.add(v.toJson());
      });
      data['points'] = arr0;
    }
    data['_id'] = id;
    return data;
  }
}

class Axis {
  List<double>? x;
  List<double>? y;
  String? id;

  Axis({
    this.x,
    this.y,
    this.id,
  });

  Axis.fromJson(Map<String, dynamic> json) {
    if (json['x'] != null) {
      final v = json['x'];
      final arr0 = <double>[];
      v.forEach((v) {
        arr0.add((v as num).toDouble());  // Correctly parse as double
      });
      x = arr0;
    }
    if (json['y'] != null) {
      final v = json['y'];
      final arr0 = <double>[];
      v.forEach((v) {
        arr0.add((v as num).toDouble());  // Correctly parse as double
      });
      y = arr0;
    }
    id = json['_id']?.toString();
  }

  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    if (x != null) {
      final v = x;
      final arr0 = [];
      v?.forEach((v) {
        arr0.add(v);
      });
      data['x'] = arr0;
    }
    if (y != null) {
      final v = y;
      final arr0 = [];
      v?.forEach((v) {
        arr0.add(v);
      });
      data['y'] = arr0;
    }
    data['_id'] = id;
    return data;
  }
}

class GradientGraphic {

  String? id;
  List<String>? aircraft;
  String? title;
  Axis? axis;
  List<GradientLines>? gradientLines;
  String? createdAt;
  String? updatedAt;

  GradientGraphic({
    this.id,
    this.aircraft,
    this.title,
    this.axis,
    this.gradientLines,
    this.createdAt,
    this.updatedAt,
  });
  GradientGraphic.fromJson(Map<String, dynamic> json) {
    id = json['_id']?.toString();
    if (json['aircraft'] != null) {
      final v = json['aircraft'];
      final arr0 = <String>[];
      v.forEach((v) {
        arr0.add(v.toString());
      });
      aircraft = arr0;
    }
    title = json['title']?.toString();
    axis = (json['axis'] != null) ? Axis.fromJson(json['axis']) : null;
    if (json['gradientLines'] != null) {
      final v = json['gradientLines'];
      final arr0 = <GradientLines>[];
      v.forEach((v) {
        arr0.add(GradientLines.fromJson(v));
      });
      gradientLines = arr0;
    }
    createdAt = json['createdAt']?.toString();
    updatedAt = json['updatedAt']?.toString();
  }
  Map<String, dynamic> toJson() {
    final data = <String, dynamic>{};
    data['_id'] = id;
    if (aircraft != null) {
      final v = aircraft;
      final arr0 = [];
      v?.forEach((v) {
        arr0.add(v);
      });
      data['aircraft'] = arr0;
    }
    data['title'] = title;
    if (axis != null) {
      data['axis'] = axis?.toJson();
    }
    if (gradientLines != null) {
      final v = gradientLines;
      final arr0 = [];
      v?.forEach((v) {
        arr0.add(v.toJson());
      });
      data['gradientLines'] = arr0;
    }
    data['createdAt'] = createdAt;
    data['updatedAt'] = updatedAt;
    return data;
  }
}
